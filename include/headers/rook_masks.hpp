#pragma once

#include <array>
#include <memory>
#include <string>
#include <map>
#include <iostream>


#include "headers/board.hpp"


typedef uint64_t Bitboard;

namespace chess::masks {
    std::array<uint8_t, 64> up_bits = {
            0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0,
            1, 1, 1, 1, 1, 1, 1, 1,
            2, 2, 2, 2, 2, 2, 2, 2,
            3, 3, 3, 3, 3, 3, 3, 3,
            4, 4, 4, 4, 4, 4, 4, 4,
            5, 5, 5, 5, 5, 5, 5, 5,
            6, 6, 6, 6, 6, 6, 6, 6,
    }

    std::array<uint8_t, 64> down_bits {
            6, 6, 6, 6, 6, 6, 6, 6,
            5, 5, 5, 5, 5, 5, 5, 5,
            4, 4, 4, 4, 4, 4, 4, 4,
            3, 3, 3, 3, 3, 3, 3, 3,
            2, 2, 2, 2, 2, 2, 2, 2,
            1, 1, 1, 1, 1, 1, 1, 1,
            0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0
    };

    std::array<uint8_t, 64> right_bits {
            6, 5, 4, 3, 2, 1, 0, 0
            6, 5, 4, 3, 2, 1, 0, 0
            6, 5, 4, 3, 2, 1, 0, 0
            6, 5, 4, 3, 2, 1, 0, 0
            6, 5, 4, 3, 2, 1, 0, 0
            6, 5, 4, 3, 2, 1, 0, 0
            6, 5, 4, 3, 2, 1, 0, 0
            6, 5, 4, 3, 2, 1, 0, 0
    };

    std::array<uint8_t, 64> left_bits {
        0, 0, 1, 2, 3, 4, 5, 6,
        0, 0, 1, 2, 3, 4, 5, 6,
        0, 0, 1, 2, 3, 4, 5, 6,
        0, 0, 1, 2, 3, 4, 5, 6,
        0, 0, 1, 2, 3, 4, 5, 6,
        0, 0, 1, 2, 3, 4, 5, 6,
        0, 0, 1, 2, 3, 4, 5, 6,
        0, 0, 1, 2, 3, 4, 5, 6
    };
}